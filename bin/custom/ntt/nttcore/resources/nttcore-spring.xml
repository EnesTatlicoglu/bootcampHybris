<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

     <context:annotation-config/>

	<!-- Spring Integration -->
	<import resource="classpath:/nttcore/integration/hot-folder-store-electronics-spring.xml"/>
	<import resource="classpath:/nttcore/integration/hot-folder-store-apparel-spring.xml"/>
	<import resource="classpath:/nttcore/integration/hot-folder-common-spring.xml"/>

	<!--FlexibleSearchExample-->
	<alias name="defaultFlexibleSearchExampleDao" alias="flexibleSearchExampleDao"/>
	<bean id="defaultFlexibleSearchExampleDao" class="tr.nttdata.bootcamp.core.product.dao.impl.DefaultFlexibleSearchExampleDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<!--Questions and Answers-->
	<alias name="defaultProductQuestionService" alias="productQuestionService"/>
	<bean id="defaultProductQuestionService" class="tr.nttdata.bootcamp.core.product.service.impl.DefaultProductQuestionService">
		<property name="productQuestionDAO" ref="productQuestionDAO"/>
		<property name="userService" ref="userService"/>
		<property name="modelService" ref="modelService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
	</bean>

	<alias name="defaultProductQuestionDAO" alias="productQuestionDAO"/>
	<bean id="defaultProductQuestionDAO" class="tr.nttdata.bootcamp.core.product.dao.impl.DefaultProductQuestionDAO">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<bean id="productQuestionPrepareInterceptor"
		  class="tr.nttdata.bootcamp.core.interceptors.ProductQuestionPrepareInterceptor">
		<property name="eventService" ref="eventService"/>
	</bean>
	<bean id="productQuestionPrepareInterceptorMapping"
		  class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="productQuestionPrepareInterceptor"/>
		<property name="typeCode" value="ProductQuestion"/>
	</bean>

	<bean id="productQuestionAnsweredEventListener"
		  class="tr.nttdata.bootcamp.core.event.ProductQuestionAnsweredEventListener" parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="generateProductQuestionAnsweredEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ProductQuestionAnsweredEmailTemplate"/>
	</bean>

	<bean id="productQuestionAnsweredEmailProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/productQuestionAnsweredEmailProcess.xml"/>
	</bean>

	<alias name="defaultProductQuestionAnsweredProcessContextStrategy" alias="productQuestionAnsweredProcessContextStrategy" />
	<bean id="defaultProductQuestionAnsweredProcessContextStrategy"
		  class="tr.nttdata.bootcamp.core.process.strategies.ProductQuestionAnsweredProcessContextStrategy"
		  parent="abstractProcessContextStrategy"/>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="processContextResolutionStrategyMap"/>
		<property name="targetMethod" value="putAll"/>
		<property name="arguments">
			<map>
				<entry value-ref="productQuestionAnsweredProcessContextStrategy">
					<key>
						<value type="java.lang.Class">tr.nttdata.bootcamp.core.model.ProductQuestionAnsweredProcessModel</value>
					</key>
				</entry>
			</map>
		</property>
	</bean>

	<!--React to Reviews-->
	<alias name="defaultCustomerReviewReactionService" alias="customerReviewReactionService"/>
	<bean id="defaultCustomerReviewReactionService"
		  class="tr.nttdata.bootcamp.core.product.service.impl.DefaultCustomerReviewReactionService">
		<property name="customerReviewReactionDao" ref="customerReviewReactionDao"/>
		<property name="userService" ref="userService"/>
		<property name="userIPService" ref="userIPService"/>
		<property name="modelService" ref="modelService"/>
	</bean>
	
	<alias name="defaultUserIPService" alias="userIPService"/>
	<bean id="defaultUserIPService"
		  class="tr.nttdata.bootcamp.core.user.service.impl.DefaultUserIPService">
		<constructor-arg ref="sessionService"/>
	</bean>

	<alias name="defaultCustomerReviewReactionDao" alias="customerReviewReactionDao"/>
	<bean id="defaultCustomerReviewReactionDao" class="tr.nttdata.bootcamp.core.product.dao.impl.DefaultCustomerReviewReactionDao"/>

	<!--Best Sellers OPTIONAL-->
	<bean id="productIsBestSellerValueResolver"
		  class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ProductIsBestSellerValueResolver"
		  parent="abstractValueResolver">
		<property name="bestSellerProductService" ref="bestSellerProductService" />
	</bean>

	<!--Best Sellers-->
	<bean id="productBestSellerCountValueResolver"
		  class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ProductBestSellerCountValueResolver"
		  parent="abstractValueResolver">
		<property name="bestSellerProductService" ref="bestSellerProductService" />
	</bean>

	<bean name="bestSellerProductJob" parent="abstractJobPerformable"
		  class="tr.nttdata.bootcamp.core.job.BestSellerProductJob">
		<property name="bestSellerProductService" ref="bestSellerProductService"/>
	</bean>

	<alias name="defaultBestSellerProductService" alias="bestSellerProductService"/>
	<bean id="defaultBestSellerProductService"
		  class="tr.nttdata.bootcamp.core.product.service.impl.DefaultBestSellerProductService">
		<property name="bestSellerProductDao" ref="bestSellerProductDao"/>
		<property name="bestSellerConfigDao" ref="bestSellerConfigDao"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="DefaultBestSellerProductDao" alias="bestSellerProductDao"/>
	<bean id="DefaultBestSellerProductDao" class="tr.nttdata.bootcamp.core.product.dao.impl.DefaultBestSellerProductDao"/>

	<alias name="DefaultBestSellerConfigDao" alias="bestSellerConfigDao"/>
	<bean id="DefaultBestSellerConfigDao" class="tr.nttdata.bootcamp.core.product.dao.impl.DefaultBestSellerConfigDao"/>


	<!--Sorting By Popularity-->

	<alias name="defaultProductViewHistoryDao" alias="productViewHistoryDao"/>
	<bean name="defaultProductViewHistoryDao"
		  class="tr.nttdata.bootcamp.core.product.dao.impl.DefaultProductViewHistoryDao"/>

	<alias name="defaultProductViewHistoryService" alias="productViewHistoryService"/>
	<bean name="defaultProductViewHistoryService"
		  class="tr.nttdata.bootcamp.core.product.service.impl.DefaultProductViewHistoryService">
		<property name="productViewHistoryDao" ref="productViewHistoryDao"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<!--Reorder Functionality-->
	<alias name="defaultCreateCartFromOrderStrategy" alias="createCartFromOrderStrategy"/>
	<bean name="defaultCreateCartFromOrderStrategy"
		  class="tr.nttdata.bootcamp.core.order.strategy.impl.DefaultCreateCartFromOrderStrategy">
		<property name="cloneAbstractOrderStrategy" ref="cloneAbstractOrderStrategy"/>
		<property name="keyGenerator" ref="orderCodeGenerator"/>
	</bean>

	<alias name="defaultReorderStrategy" alias="reorderStrategy"/>
	<bean name="defaultReorderStrategy"
		  class="tr.nttdata.bootcamp.core.order.strategy.impl.DefaultReorderStrategy">
		<property name="createCartFromOrderStrategy" ref="createCartFromOrderStrategy"/>
		<property name="modelService" ref="modelService"/>
		<property name="commerceCartRestorationStrategy" ref="commerceCartRestorationStrategy"/>
		<property name="cartService" ref="cartService"/>
	</bean>

	<alias name="defaultReorderService" alias="reorderService"/>
	<bean name="defaultReorderService"
		  class="tr.nttdata.bootcamp.core.order.service.impl.DefaultReorderService">
		<property name="reorderStrategy" ref="reorderStrategy"/>
	</bean>

	<!---->
	<alias name="defaultPromotedUserGroupConfigurationDao" alias="promotedUserGroupConfigurationDao"/>
	<bean name="defaultPromotedUserGroupConfigurationDao"
		  class="tr.nttdata.bootcamp.core.user.dao.impl.DefaultPromotedUserGroupConfigurationDao"/>

	<alias name="defaultPromotedUserGroupConfigurationService" alias="promotedUserGroupConfigurationService"/>
	<bean name="defaultPromotedUserGroupConfigurationService"
		  class="tr.nttdata.bootcamp.core.user.service.impl.DefaultPromotedUserGroupConfigurationService">
		<property name="promotedUserGroupConfigurationDao" ref="promotedUserGroupConfigurationDao"/>
		<property name="nttUserDao" ref="nttUserDao"/>
	</bean>

	<bean name="updateCustomerPromotedUserGroupsJob" parent="abstractJobPerformable"
		  class="tr.nttdata.bootcamp.core.job.UpdateCustomerPromotedUserGroupsJob">
		<property name="promotedUserGroupConfigurationService" ref="promotedUserGroupConfigurationService"/>
	</bean>


	<!---->
	<bean id="sampleTaskRunner" class="tr.nttdata.bootcamp.core.task.SampleTaskRunner"/>

	<!---->
	<alias name="defaultCartCustomerNoteStrategy" alias="cartCustomerNoteStrategy"/>
	<bean id="defaultCartCustomerNoteStrategy" class="tr.nttdata.bootcamp.core.order.strategy.impl.DefaultCartCustomerNoteStrategy" >
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="defaultCartCustomerNoteService" alias="cartCustomerNoteService"/>
	<bean id="defaultCartCustomerNoteService" class="tr.nttdata.bootcamp.core.order.impl.DefaultCartCustomerNoteService" >
		<property name="cartCustomerNoteStrategy" ref="cartCustomerNoteStrategy"/>
	</bean>

	<alias name="defaultAddToCartHistoryCommerceAddToCartMethodHook" alias="addToCartHistoryCommerceAddToCartMethodHook"/>
	<bean id="defaultAddToCartHistoryCommerceAddToCartMethodHook"
		  class="tr.nttdata.bootcamp.core.order.hook.impl.AddToCartHistoryCommerceAddToCartMethodHook">
		<property name="modelService" ref="modelService"/>
	</bean>

	<bean id="addToCartHistoryCommerceAddToCartMethodHookMergeDirective" depends-on="commerceAddToCartMethodHooks" parent="listMergeDirective">
		<property name="add" ref="addToCartHistoryCommerceAddToCartMethodHook"/>
	</bean>

	<alias name="defaultNttUserDao" alias="nttUserDao"/>
	<bean id="defaultNttUserDao" class="tr.nttdata.bootcamp.core.user.dao.impl.DefaultNttUserDao">
		<constructor-arg ref="flexibleSearchService"/>
	</bean>

	<!-- Value Resolver -->
	<bean id="productReviewCountValueResolver"
		  class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ProductReviewCountValueResolver"
		  parent="abstractValueResolver">
		<property name="customerReviewService" ref="customerReviewService" />
	</bean>

	<bean id="productTotalViewCountValueResolver"
		  class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ProductTotalViewCountValueResolver"
		  parent="abstractValueResolver">
		<property name="productViewHistoryService" ref="productViewHistoryService" />
	</bean>

	<!-- ATTRIBUTEHANDLERS -->
	<bean id="productBadgeVisibleAttributeHandler" class="tr.nttdata.bootcamp.core.attributehandler.ProductBadgeVisibleAttributeHandler"/>
	<bean id="productBadgeCountAttributeHandler" class="tr.nttdata.bootcamp.core.attributehandler.ProductBadgeCountAttributeHandler"/>

	<!-- INTERCEPTORS -->
	<bean id="productBadgePrepareInterceptor" class="tr.nttdata.bootcamp.core.interceptors.ProductBadgePrepareInterceptor"/>
	<bean id="productBadgePrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="productBadgePrepareInterceptor"/>
		<property name="typeCode" value="ProductBadge"/>
	</bean>
	
	<!-- BADGES -->
	<alias name="defaultProductBadgeDao" alias="productBadgeDao"/>
	<bean id="defaultProductBadgeDao" class="tr.nttdata.bootcamp.core.badges.dao.impl.DefaultProductBadgeDao"/>

	<alias name="defaultProductBadgeService" alias="productBadgeService"/>
	<bean id="defaultProductBadgeService" class="tr.nttdata.bootcamp.core.badges.service.impl.DefaultProductBadgeService">
		<property name="productBadgeDao" ref="productBadgeDao"/>
	</bean>

	<!-- PRODUCT BADGE VALUE RESOLVER -->
	<bean id="productBadgeValueResolver"
		  class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ProductBadgeValueResolver"
		  parent="abstractValueResolver"/>

	<!-- PRODUCT BADGE FACET DISPLAY NAME PROVIDER -->
	<bean id="productBadgeFacetDisplayNameProvider"
		  class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ProductBadgeFacetDisplayNameProvider">
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="productBadgeService" ref="productBadgeService"/>
	</bean>

	<!-- SystemSetup for the NttCore -->
	<bean id="acceleratorCoreSystemSetup" class="tr.nttdata.bootcamp.core.setup.CoreSystemSetup"
	       parent="abstractCoreSystemSetup"/>

	<!-- Solr field value providers -->

	<bean id="volumeAwareProductPriceValueProvider" class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.VolumeAwareProductPriceValueProvider"  parent="abstractPropertyFieldValueProvider">
        <property name="fieldNameProvider" ref="solrFieldNameProvider"/>
        <property name="priceService" ref="priceService"/>
        <property name="commonI18NService" ref="commonI18NService"/>
        <property name="sessionService" ref="sessionService"/>
        <property name="userService" ref="userService"/>
        <property name="priceComparator" ref="volumePriceComparator"/>
        <property name="catalogVersionService" ref="catalogVersionService"/>
    </bean>

    <bean id="volumePriceComparator" class="tr.nttdata.bootcamp.core.comparators.VolumeAwarePriceInformationComparator" scope="singleton"/>

    <bean id="productVolumePricesProvider" class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ProductVolumePricesProvider"  parent="abstractPropertyFieldValueProvider">
        <property name="fieldNameProvider" ref="solrFieldNameProvider"/>
        <property name="priceService" ref="priceService"/>
    </bean>


	<bean id="electronicsCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="1"/>
		<!-- '1' is the root icecat category -->
	</bean>
	<bean id="electronicsBrandCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="brands"/>
		<!-- 'brands' is the root of the brands hierarchy -->
	</bean>

	<bean id="apparelCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="categories"/>
		<!-- 'categories' is the root apparel category -->
	</bean>
	<bean id="apparelBrandCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="brands"/>
		<!-- 'brands' is the root of the brands hierarchy -->
	</bean>
	<bean id="apparelCollectionCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="collections"/> <!-- 'collections' is the root of the collections hierarchy -->
	</bean>

	<bean id="abstractCategoryCodeValueProvider" abstract="true"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>
	<bean id="abstractCategoryNameValueProvider" abstract="true"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryNameValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="electronicsCategoryCodeValueProvider" parent="abstractCategoryCodeValueProvider">
		<property name="categorySource" ref="electronicsCategorySource"/>
	</bean>
	<bean id="electronicsBrandCategoryCodeValueProvider" parent="abstractCategoryCodeValueProvider">
		<property name="categorySource" ref="electronicsBrandCategorySource"/>
	</bean>
	<bean id="electronicsCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="electronicsCategorySource"/>
	</bean>
	<bean id="electronicsBrandCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="electronicsBrandCategorySource"/>
	</bean>

	<bean id="apparelCategoryCodeValueProvider" parent="abstractCategoryCodeValueProvider">
		<property name="categorySource" ref="apparelCategorySource"/>
	</bean>
	<bean id="apparelBrandCategoryCodeValueProvider" parent="abstractCategoryCodeValueProvider">
		<property name="categorySource" ref="apparelBrandCategorySource"/>
	</bean>
	<bean id="apparelCollectionCategoryCodeValueProvider" parent="abstractCategoryCodeValueProvider">
		<property name="categorySource" ref="apparelCollectionCategorySource"/>
	</bean>
	<bean id="apparelCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="apparelCategorySource"/>
	</bean>
	<bean id="apparelBrandCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="apparelBrandCategorySource"/>
	</bean>
	<bean id="apparelCollectionCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="apparelCollectionCategorySource"/>
	</bean>

	<bean id="image515ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="515Wx515H"/>
	</bean>
	<bean id="image300ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="300Wx300H"/>
	</bean>
	<bean id="image96ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="96Wx96H"/>
	</bean>
	<bean id="image65ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="65Wx65H"/>
	</bean>
	<bean id="image30ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="30Wx30H"/>
	</bean>

	<bean id="productUrlValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.ProductUrlValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="urlResolver" ref="productModelUrlResolver"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="promotionCodeValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PromotionCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>

	<bean id="promotionImageValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PrimaryPromotionImageValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>

	<bean id="colorFacetValueProvider"
	      class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ColorFacetValueProvider"
	       parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>

	<bean id="colorFacetDisplayNameProvider"
	      class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.ColorFacetDisplayNameProvider"
	      >
		<property name="enumerationService" ref="enumerationService"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="apparelPointOfServiceFacetDisplayNameProvider"
	      class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.PointOfServiceFacetDisplayNameProvider"
	      >
		<property name="pointOfServiceService" ref="pointOfServiceService"/>
	</bean>

	<bean id="electronicsPointOfServiceFacetDisplayNameProvider"
	      class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.PointOfServiceFacetDisplayNameProvider"
	      >
		<property name="pointOfServiceService" ref="pointOfServiceService"/>
	</bean>

	<bean id="genderValueProvider"
	      class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.GenderValueProvider"
	       parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>

	<bean id="genderFacetDisplayNameProvider"
	      class="tr.nttdata.bootcamp.core.search.solrfacetsearch.provider.impl.GenderFacetDisplayNameProvider"
	      >
		<property name="enumerationService" ref="enumerationService"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<!--
		Event listeners are singletons, therefore the dependency for a bean in tenant-scope
		must be configured with a lookup method.
	-->
	<bean id="orderCancelledEventListener"
	      class="tr.nttdata.bootcamp.core.event.OrderCancelledEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderRefundEventListener"
	      class="tr.nttdata.bootcamp.core.event.OrderRefundEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="customerRegistrationEventListener"
	      class="tr.nttdata.bootcamp.core.event.RegistrationEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="forgottenPasswordEventListener"
	      class="tr.nttdata.bootcamp.core.event.ForgottenPasswordEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="submitOrderEventListener" class="tr.nttdata.bootcamp.core.event.SubmitOrderEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="businessProcessService" ref="businessProcessService"/>
		<property name="modelService" ref="modelService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>
	<bean id="orderConfirmationEventListener"
	      class="tr.nttdata.bootcamp.core.event.OrderConfirmationEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendDeliveryMessageEventListener"
	      class="tr.nttdata.bootcamp.core.event.SendDeliveryMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendReadyForPickupMessageEventListener"
	      class="tr.nttdata.bootcamp.core.event.SendReadyForPickupMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledMessageEventListener"
	      class="tr.nttdata.bootcamp.core.event.SendOrderPartiallyCanceledMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedMessageEventListener"
	      class="tr.nttdata.bootcamp.core.event.SendOrderPartiallyRefundedMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledMessageEventListener"
	      class="tr.nttdata.bootcamp.core.event.SendNotPickedUpConsignmentCanceledMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderCompletedEventListener" class="tr.nttdata.bootcamp.core.event.OrderCompletedEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<!-- Process resources definition -->

	<bean id="customerRegistrationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/customerRegistrationEmailProcess.xml"/>
	</bean>
	<bean id="forgottenPasswordEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/forgottenPasswordEmailProcess.xml"/>
	</bean>
	<bean id="orderConfirmationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/orderConfirmationEmailProcess.xml"/>
	</bean>
	<bean id="sendDeliveryEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/sendDeliveryEmailProcess.xml"/>
	</bean>
	<bean id="sendReadyForPickupEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/sendReadyForPickupEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderCancelledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/sendOrderCancelledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderRefundEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/sendOrderRefundEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/sendOrderPartiallyCanceledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/sendOrderPartiallyRefundedEmailProcess.xml"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/sendNotPickedUpConsignmentCanceledEmailProcess.xml"/>
	</bean>

	<!-- Actions -->
	<bean id="abstractAction" class="de.hybris.platform.processengine.action.AbstractAction"
	      abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="processParameterHelper" ref="processParameterHelper"/>
	</bean>

	<bean id="sendEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.SendEmailAction"
	       parent="abstractAction">
		<property name="emailService" ref="emailService"/>
	</bean>

	<bean id="abstractGenerateEmailAction" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction"
	      parent="abstractAction" abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="emailGenerationService" ref="emailGenerationService"/>
	</bean>

	<bean id="generateCustomerRegistrationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="CustomerRegistrationEmailTemplate"/>
	</bean>

	<bean id="generateForgottenPasswordEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ForgottenPasswordEmailTemplate"/>
	</bean>

	<bean id="generateOrderConfirmationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderConfirmationEmailTemplate"/>
	</bean>

	<bean id="generateDeliverySentEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="DeliverySentEmailTemplate"/>
	</bean>

	<bean id="generateReadyForPickupEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ReadyForPickupEmailTemplate"/>
	</bean>

	<bean id="generateOrderCancelledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderCancelledEmailTemplate"/>
	</bean>

	<bean id="generateOrderRefundEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderRefundEmailTemplate"/>
	</bean>

	<bean id="generateOrderPartiallyCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyCanceledEmailTemplate"/>
	</bean>
	<bean id="generateOrderPartiallyRefundedEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyRefundedEmailTemplate"/>
	</bean>
	<bean id="generateNotPickedUpConsignmentCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="NotPickedUpConsignmentCanceledEmailTemplate"/>
	</bean>

	<bean id="removeSentEmail"
	      class="de.hybris.platform.acceleratorservices.process.email.actions.RemoveSentEmailAction"
	      parent="abstractAction">
		<property name="modelService" ref="modelService"/>
	</bean>

    <bean id="markQuoteNotificationAsSent"
          class="tr.nttdata.bootcamp.core.actions.quote.MarkQuoteNotificationAsSentAction"
          parent="abstractAction" abstract="true">
        <property name="quoteService" ref="quoteService"/>
    </bean>

	<!-- Simple Suggestion Service -->
	<alias alias="simpleSuggestionService" name="defaultSimpleSuggestionService"/>
	<bean id="defaultSimpleSuggestionService"
	      class="tr.nttdata.bootcamp.core.suggestion.impl.DefaultSimpleSuggestionService" >
		<property name="simpleSuggestionDao" ref="simpleSuggestionDao"/>
	</bean>
	<alias alias="simpleSuggestionDao" name="defaultSimpleSuggestionDao"/>
	<bean id="defaultSimpleSuggestionDao"
	      class="tr.nttdata.bootcamp.core.suggestion.dao.impl.DefaultSimpleSuggestionDao"
	      parent="abstractItemDao" >
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<!-- Product Reference Lookup Strategies-->
	<alias name="apparelCrossSellingProductReferenceTargetStrategy" alias="crossSellingProductReferenceTargetStrategy"/>
	<bean id="apparelCrossSellingProductReferenceTargetStrategy"
	      parent="defaultCrossSellingProductReferenceTargetStrategy">
		<property name="productReferenceTargetStrategies">
			<list merge="true">
				<ref bean="apparelSizeProductReferenceTargetStrategy"/>
			</list>
		</property>
	</bean>

	<bean id="apparelSizeProductReferenceTargetStrategy"
	      class="tr.nttdata.bootcamp.core.strategies.impl.ApparelSizeProductReferenceTargetStrategy">
		<property name="commerceCategoryService" ref="commerceCategoryService"/>
		<property name="rootCategoryCode" value="categories"/>
	</bean>

	<!-- Sales quote process actions -->

	<!-- quote-->
	<bean id="quoteBuyerSubmitEventListener" class="tr.nttdata.bootcamp.core.event.QuoteBuyerSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteSalesRepSubmitEventListener" class="tr.nttdata.bootcamp.core.event.QuoteSalesRepSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteSellerApprovalSubmitEventListener" class="tr.nttdata.bootcamp.core.event.QuoteSellerApprovalSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteBuyerOrderPlacedEventListener" class="tr.nttdata.bootcamp.core.event.QuoteBuyerOrderPlacedEventListener"
		  parent="abstractEventListener">
		<property name="commerceQuoteService" ref="commerceQuoteService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<bean id="quoteToExpireSoonEventListener" class="tr.nttdata.bootcamp.core.event.QuoteToExpireSoonEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	
	<bean id="quoteExpiredEventListener" class="tr.nttdata.bootcamp.core.event.QuoteExpiredEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteCancelEventListener" class="tr.nttdata.bootcamp.core.event.QuoteCancelEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteBuyerProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/quote/quote-buyer-process.xml"/>
	</bean>

	<bean id="quoteSalesRepProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/quote/quote-salesrep-process.xml"/>
	</bean>


	<bean id="quoteSellerApprovalProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/quote/quote-seller-approval-process.xml"/>
	</bean>
	
	<bean id="quotePostCancellationProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/quote/quote-post-cancellation-process.xml"/>
	</bean>

	<bean id="quoteToExpireSoonProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/quote/quote-to-expire-soon-email-process.xml"/>
	</bean>
	
	<bean id="quoteExpiredProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/nttcore/processes/quote/quote-expired-email-process.xml"/>
	</bean>

	<!-- Quotes email notification jobs -->
	<bean id="quoteToExpireSoonJobPerformable"
		  class="tr.nttdata.bootcamp.core.job.QuoteToExpireSoonJobPerformable"
		  parent="abstractJobPerformable">
		<property name="supportedQuoteStatuses">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_OFFER</value>
			</set>
		</property>
		<property name="commerceQuoteDao" ref="commerceQuoteDao"/>
		<property name="eventService" ref="eventService" />
		<property name="configurationService" ref="configurationService" />
		<property name="timeService" ref="timeService" />
	</bean>
	
	<bean id="quoteExpiredJobPerformable"
		  class="tr.nttdata.bootcamp.core.job.QuoteExpiredJobPerformable"
		  parent="abstractJobPerformable">
		<property name="supportedQuoteStatuses">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_OFFER</value>
			</set>
		</property>
		<property name="commerceQuoteDao" ref="commerceQuoteDao"/>
		<property name="eventService" ref="eventService" />
		<property name="timeService" ref="timeService" />
	</bean>

	<import resource="/nttcore/processes/quote/quote-buyer-process-spring.xml"/>
	<import resource="/nttcore/processes/quote/quote-salesrep-process-spring.xml"/>
	<import resource="/nttcore/processes/quote/quote-seller-approval-process-spring.xml"/>
	
	<import resource="/nttcore/processes/quote/quote-to-expire-soon-email-process-spring.xml"/>
	<import resource="/nttcore/processes/quote/quote-expired-email-process-spring.xml"/>

	<import resource="/nttcore/processes/quote/quote-post-cancellation-process-spring.xml"/>
	
	<!-- Customer cleanup -->
	<alias name="defaultCustomerCleanupRelatedObjectsAction" alias="customerCleanupRelatedObjectsAction"/>
	<bean id="defaultCustomerCleanupRelatedObjectsAction" class="tr.nttdata.bootcamp.core.retention.impl.DefaultCustomerCleanupRelatedObjectsAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="customerCleanupHooks"/>
	</bean>
	
	<!-- Cleanup the customers not owning any order currently and the current date has past deactivation date+retention date. Also removes customers audit records. -->
	<alias name="defaultCustomerNotOwningOrdersRemoveCleanupAction" alias="customerNotOwningOrdersRemoveCleanupAction"/>
	<bean id="defaultCustomerNotOwningOrdersRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="customerCleanupHooks"/>
	</bean>
	
	<!-- Order cleanup -->
	<!-- Cleanup the order related objects and then remove order and its audit records. -->
	<alias name="defaultOrderRemoveCleanupAction" alias="orderRemoveCleanupAction"/>
	<bean id="defaultOrderRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="orderCleanupHooks"/>
	</bean>

	<!-- CsTicket Remove action -->
	<alias name="defaultCSTicketRemoveCleanupAction" alias="csTicketRemoveCleanupAction"/>
	<bean id="defaultCSTicketRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="csTicketCleanupHooks"/>
	</bean>

	<!-- CsTicket Stagnation action -->
	<alias name="defaultCSTicketStagnationAction" alias="csTicketStagnationAction"/>
	<bean id="defaultCSTicketStagnationAction" class="tr.nttdata.bootcamp.core.retention.impl.DefaultCSTicketStagnationAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="csTicketRetentionHooks"/>
		<property name="ticketBusinessService" ref="ticketBusinessService"/>
	</bean>
</beans>
