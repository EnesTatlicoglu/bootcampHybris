<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/cache
           http://www.springframework.org/schema/cache/spring-cache.xsd">

    <cache:annotation-driven/>

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      name="productCache"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      name="productDetailCache"/>
            </set>
        </property>
    </bean>


    <bean id="nttbootcampSystemSetup" class="tr.nttdata.bootcamp.setup.NttbootcampSystemSetup">
        <!-- constructor arg injection example -->
        <constructor-arg ref="nttbootcampService"/>
    </bean>

    <bean id="nttbootcampService" class="tr.nttdata.bootcamp.service.impl.DefaultNttbootcampService">
        <!-- setter injection example -->
        <property name="productBadgeDao" ref="productBadgeDao"/>
        <property name="modelService" ref="modelService"/>
        <property name="mediaService" ref="mediaService"/>
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>

    <alias name="nttUserService" alias="userService"/>
    <bean id="nttUserService" parent="defaultUserService"
          class="tr.nttdata.bootcamp.service.impl.NttUserService">
    </bean>

    <bean id="productBadgeVisibleAttributeHandler"
          class="tr.nttdata.bootcamp.attributehandler.ProductBadgeVisibleAttributeHandler"/>
    <bean id="Product_badgeCountAttributeHandler"
          class="tr.nttdata.bootcamp.attributehandler.ProductBadgeCountAttributeHandler"/>

    <bean id="bootcampSystemSetup" class="tr.nttdata.bootcamp.setup.BootcampSystemSetup">
        <constructor-arg ref="importService"/>
    </bean>

    <alias name="defaultProductBadgeDao" alias="productBadgeDao"/>
    <bean id="defaultProductBadgeDao" class="tr.nttdata.bootcamp.dao.impl.DefaultProductBadgeDao"/>


    <alias name="defaultProductBadgePopulator" alias="productBadgePopulator"/>
    <bean id="defaultProductBadgePopulator" class="tr.nttdata.bootcamp.populators.ProductBadgePopulator">
    </bean>

    <alias name="defaultProductBadgeConverter" alias="productBadgeConverter"/>
    <bean id="defaultProductBadgeConverter" parent="abstractPopulatingConverter">
        <property name="targetClass" value="tr.nttdata.bootcamp.data.ProductBadgeData"/>
        <property name="populators">
            <list>
                <ref bean="productBadgePopulator"/>
            </list>
        </property>
    </bean>

    <alias name="defaultProductBasicPopulator" alias="productBasicPopulator"/>
    <bean id="defaultProductBasicPopulator" class="tr.nttdata.bootcamp.populators.ProductBasicPopulator">
    </bean>

    <alias name="defaultProductBadgesPopulator" alias="productBadgesPopulator"/>
    <bean id="defaultProductBadgesPopulator" class="tr.nttdata.bootcamp.populators.ProductBadgesPopulator">
        <property name="productBadgeConverter" ref="productBadgeConverter"/>
    </bean>

    <alias name="defaultProductBrandPopulator" alias="productBrandPopulator"/>
    <bean id="defaultProductBrandPopulator" class="tr.nttdata.bootcamp.populators.ProductBrandPopulator">
        <property name="brandConverter" ref="brandConverter"/>
    </bean>


    <alias name="defaultProductConfigurablePopulator" alias="productConfigurablePopulator"/>
    <bean id="defaultProductConfigurablePopulator" parent="abstractConfigurablePopulator">
    </bean>

    <bean class="de.hybris.platform.converters.config.ConfigurablePopulatorModification">
        <property name="target" ref="productConfigurablePopulator"/>
        <property name="keyType" value="tr.nttdata.bootcamp.data.ProductOption"/>
        <property name="key" value="BASIC"/>
        <property name="add" ref="productBasicPopulator"/>
    </bean>

    <bean class="de.hybris.platform.converters.config.ConfigurablePopulatorModification">
        <property name="target" ref="productConfigurablePopulator"/>
        <property name="keyType" value="tr.nttdata.bootcamp.data.ProductOption"/>
        <property name="key" value="BADGES"/>
        <property name="add" ref="productBadgesPopulator"/>
    </bean>

    <bean class="de.hybris.platform.converters.config.ConfigurablePopulatorModification">
        <property name="target" ref="productConfigurablePopulator"/>
        <property name="keyType" value="tr.nttdata.bootcamp.data.ProductOption"/>
        <property name="key" value="BRAND"/>
        <property name="add" ref="productBrandPopulator"/>
    </bean>


    <alias name="defaultProductBadgeService" alias="productBadgeService"/>
    <bean id="defaultProductBadgeService" class="tr.nttdata.bootcamp.service.impl.DefaultProductBadgeService">
    </bean>

    <alias name="defaultProductBadgeFacade" alias="productBadgeFacade"/>
    <bean id="defaultProductBadgeFacade" class="tr.nttdata.bootcamp.facades.impl.DefaultProductBadgeFacade">
        <property name="productBadgeService" ref="productBadgeService"/>
        <property name="productBadgeConverter" ref="productBadgeConverter"/>
        <property name="productBadgeCacheRegion" ref="productBadgeCacheRegion"/>
        <property name="productBadgeCacheValueLoader" ref="productBadgeCacheValueLoader"/>
    </bean>

    <alias name="defaultProductFacade" alias="productFacade"/>
    <bean id="defaultProductFacade" class="tr.nttdata.bootcamp.facades.impl.DefaultProductFacade">
        <property name="catalogVersionService" ref="catalogVersionService"/>
        <property name="productService" ref="productService"/>
        <property name="brandService" ref="brandService"/>
        <property name="productConfigurablePopulator" ref="productConfigurablePopulator"/>
    </bean>

    <alias name="defaultBrandDao" alias="brandDao"/>
    <bean id="defaultBrandDao" class="tr.nttdata.bootcamp.dao.impl.DefaultBrandDao"/>

    <alias name="defaultBrandService" alias="brandService"/>
    <bean id="defaultBrandService" class="tr.nttdata.bootcamp.service.impl.DefaultBrandService">
        <property name="brandDao" ref="brandDao"/>
    </bean>

    <alias name="defaultBrandFacade" alias="brandFacade"/>
    <bean id="defaultBrandFacade" class="tr.nttdata.bootcamp.facades.impl.DefaultBrandFacade">
        <property name="brandService" ref="brandService"/>
        <property name="brandConverter" ref="brandConverter"/>
    </bean>

    <alias name="defaultBrandPopulator" alias="brandPopulator"/>
    <bean id="defaultBrandPopulator" class="tr.nttdata.bootcamp.populators.BrandPopulator">
    </bean>

    <alias name="defaultBrandConverter" alias="brandConverter"/>
    <bean id="defaultBrandConverter" parent="abstractPopulatingConverter">
        <property name="targetClass" value="tr.nttdata.bootcamp.data.BrandData"/>
        <property name="populators">
            <list>
                <ref bean="brandPopulator"/>
            </list>
        </property>
    </bean>

    <!--

    <bean id="productBadgeInitDefaultsInterceptor"
          class="tr.nttdata.bootcamp.interceptors.ProductBadgeInitDefaultsInterceptor"/>
    <bean id="productBadgeInitDefaultsInterceptorMapping"
          class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="productBadgeInitDefaultsInterceptor"/>
        <property name="typeCode" value="ProductBadge"/>
    </bean>

    -->

    <bean id="productBadgeLoadInterceptor"
          class="tr.nttdata.bootcamp.interceptors.ProductBadgeLoadInterceptor"/>
    <bean id="productBadgeLoadInterceptorMapping"
          class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="productBadgeLoadInterceptor"/>
        <property name="typeCode" value="ProductBadge"/>
    </bean>

    <bean id="productBadgePrepareInterceptor"
          class="tr.nttdata.bootcamp.interceptors.ProductBadgePrepareInterceptor">
        <property name="eventService" ref="eventService"/>
        <property name="userService" ref="userService"/>
    </bean>

    <bean id="productBadgePrepareInterceptorMapping"
          class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="productBadgePrepareInterceptor"/>
        <property name="typeCode" value="ProductBadge"/>
    </bean>

    <bean id="productBadgeValidateInterceptor"
          class="tr.nttdata.bootcamp.interceptors.ProductBadgeValidateInterceptor"/>
    <bean id="productBadgeValidateInterceptorMapping"
          class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="productBadgeValidateInterceptor"/>
        <property name="typeCode" value="ProductBadge"/>
    </bean>

    <bean id="productBadgeRemoveInterceptor"
          class="tr.nttdata.bootcamp.interceptors.ProductBadgeRemoveInterceptor"/>
    <bean id="productBadgeRemoveInterceptorMapping"
          class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="productBadgeRemoveInterceptor"/>
        <property name="typeCode" value="ProductBadge"/>
    </bean>

    <alias name="defaultProductBadgeCacheValueLoader" alias="productBadgeCacheValueLoader"/>
    <bean id="defaultProductBadgeCacheValueLoader" class="tr.nttdata.bootcamp.cache.ProductBadgeCacheValueLoader">
        <property name="productBadgeService" ref="productBadgeService"/>
    </bean>

    <bean id="productBadgeEventListener" class="tr.nttdata.bootcamp.listeners.ProductBadgeEventListener" parent="abstractEventListener">
        <property name="modelService" ref="modelService" />
    </bean>

    <bean id="productBadgeActivatedEventListener" class="tr.nttdata.bootcamp.listeners.ProductBadgeActivatedEventListener" parent="abstractEventListener">
    </bean>

</beans>
